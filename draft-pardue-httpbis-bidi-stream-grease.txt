



HTTP                                                           L. Pardue
Internet-Draft                                                Cloudflare
Intended status: Standards Track                            9 March 2021
Expires: 10 September 2021


                  Greasing Bidirectional HTTP Streams
             draft-pardue-httpbis-bidi-stream-grease-latest

Abstract

   The behaviour of HTTP/2 and HTTP/3 bidirectional streams can be
   modified by protocol extensions.  Extensions of this type require
   negotiation and it is possible that, for lack of driving application
   use case and/or deployment, this form of extension is not tested
   widely.  This memo defines a mechanism for endpoints to exercise the
   extension point at the stream and framing layer.

Note to Readers

   _RFC EDITOR: please remove this section before publication_

   Source code and issues list for this draft can be found at
   https://github.com/LPardue/draft-pardue-http-bidi-stream-grease
   (https://github.com/LPardue/draft-pardue-http-bidi-stream-grease).

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 10 September 2021.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction
     1.1.  Notational Conventions
   2.  HTTP/2 Bidirectional Stream Extension
   3.  HTTP/3 Bidirectional Stream Grease
   4.  Security Considerations
   5.  IANA Considerations
   6.  Normative References
   Appendix A.  Acknowledgements
   Author's Address

1.  Introduction

   The behaviour of HTTP/2 and HTTP/3 bidirectional streams can be
   modified by protocol extensions.  Extensions of this type require
   negotiation and it is possible that, for lack of driving application
   use case and/or deployment, this form of extension is not tested
   widely.  This memo defines a mechanism for endpoints to exercise the
   extension point at the stream and framing layer.

   In HTTP/2 [HTTP2] all streams are bidirectional.  Client-initiated
   streams are conventionally used for requests, while server-initiated
   streams are used for push responses.  HTTP message exchanges occur on
   streams; see Section 8 of [HTTP2].  Streams have several states.
   Depending on the stream initiator and the endpoint role, sending or
   receiving particular frame types or frames with flags (END_STREAM,
   RST_STREAM) causes transition between states; see Section 5.1 of
   [HTTP2].  Extensions are permitted to modify these behaviours but
   negotiation is required; see Section 5.5 of [HTTP2].

   In HTTP/3 [HTTP3] client-initiated bidirectional streams are
   conventionally used for requests, while server-initiated streams are
   not used.  HTTP message exchanges occur on streams; see Section 4.1
   of [HTTP3].  Stream states are managed by the QUIC transport layer.
   Extensions are permitted to modify message exchange behaviour but
   negotiation is required; see Section 9 of [HTTP3].

   Although HTTP/2 and HTTP/3 extensions that change bidirectional
   stream behaviour are possible, there are not many cases of such
   extensions and not much evidence of interoperable deployments.  This
   document defines bidirectional stream grease mechanisms for HTTP/2
   and HTTP/3 that are intended to exercise the extension point without
   requiring any functional application changes.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  HTTP/2 Bidirectional Stream Extension

   The HTTP/3 bidirectional stream grease extension is an optional
   change to client- and server- initiated bidirectional streams.  It is
   negotiated via the SETTINGS_BIDI_GREASE setting (0xTBD).  A value of
   0 indicates the endpoint does not support receiving bidirectional
   grease streams, a value of 1 indicates that an endpoint does support
   receiving bidirectional stream grease.  The default is 0.  An
   endpoint that receives SETTINGS_BIDI_GREASE with a value that is
   neither 0 or 1 MUST terminate the connection with error
   PROTOCOL_ERROR.

   Once an endpoint receives SETTINGS_BIDI_GREASE with a value of 1, it
   MAY send a BIDI_GREASE frame as the first element on a bidirectional
   stream.  The BIDI_GREASE frame immediately opens and terminates a
   stream.  This is a change to the stream state machine defined in
   Section 5.1 of [HTTP2].

   +---------------------------------------------------------------+
   |                           Data (*)                            |
   +---------------------------------------------------------------+

                     Figure 1: HTTP/2 BIDI_GREASE frame

   The BIDI_GREASE frame does not define any flags.

   The data carried in a BIDI_GREASE frame has no semantic meaning.  It
   MUST be discarded.

   BIDI_GREASE frames MUST be associated with a stream.  If a
   BIDI_GREASE frame is received with a stream identifier of 0x0, the
   recipient MUST treat this as a connection error of type
   PROTOCOL_ERROR.

3.  HTTP/3 Bidirectional Stream Grease

   The HTTP/3 bidirectional stream grease extension is an optional
   change to client- and server- initiated bidirectional streams.  It is
   negotiated via the SETTINGS_BIDI_GREASE setting (0xTBD).  A value of
   0 indicates the endpoint does not support receiving bidirectional
   grease streams, a value of 1 indicates that an endpoint does support
   receiving bidirectional stream grease.  The default is 0.  An
   endpoint that receives SETTINGS_BIDI_GREASE with a value that is
   neither 0 or 1 MUST terminate the connection with error
   H3_SETTINGS_ERROR.

   Once an endpoint receives SETTINGS_BIDI_GREASE with a value of 1, it
   MAY send a BIDI_GREASE frame as the first element on a bidirectional
   stream.  BIDI_GREASE is a type-value frame, which means its data
   extends to the full length of the stream.

   BIDI_GREASE {
       Type = (0xTBD),
       Data = (..)
   }

                     Figure 2: HTTP/3 BIDI_GREASE frame

   The data carried in a BIDI_GREASE frame has no semantic meaning.  It
   MUST be discarded.

   BIDI_GREASE frames MUST NOT be sent on the control stream or push
   streams.  If a frame is received on one of these stream types, it
   MUST be treated as a connection error of type H3_FRAME_UNEXPECTED.

4.  Security Considerations

   Bidirectional stream grease extensions allow arbitrary data to be
   sent.  The protocol prohibits endpoints from unintentionally
   processing such data as HTTP messages.

5.  IANA Considerations

   TBD

6.  Normative References

   [HTTP2]    Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol Version 2 (HTTP/2)", RFC 7540,
              DOI 10.17487/RFC7540, May 2015,
              <https://datatracker.ietf.org/doc/html/rfc7540>.

   [HTTP3]    Bishop, M., "Hypertext Transfer Protocol Version 3
              (HTTP/3)", Work in Progress, Internet-Draft, draft-ietf-
              quic-http-34, 2 February 2021,
              <https://datatracker.ietf.org/doc/html/draft-ietf-quic-
              http-34.txt>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://datatracker.ietf.org/doc/html/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://datatracker.ietf.org/doc/html/rfc8174>.

Appendix A.  Acknowledgements

   The ideas in this document were discussed during a WebTransport
   Working Group meeting.

Author's Address

   Lucas Pardue
   Cloudflare

   Email: lucaspardue.24.7@gmail.com
